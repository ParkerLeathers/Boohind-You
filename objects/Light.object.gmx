<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//**VARIABLES**

xvel = 0;
yvel = 0;
xtarvel = 0;
ytarvel = 0;
xtartarvel = 0;
ytartarvel = 0;
xace = 0;
yace = 0;

//**POSITIONING**

x = Player.x;
y = Player.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//**Acceleration**

//set x target target velocity
if keyboard_check(ord("J")) &amp;&amp; !keyboard_check(ord("L"))
    xtartarvel = -LIGHT_MAX_SPEED;
else if keyboard_check(ord("L")) &amp;&amp; !keyboard_check(ord("J"))
    xtartarvel = LIGHT_MAX_SPEED;
else {
    xtartarvel = 0;
}

//set y target target velocity
if keyboard_check(ord("I")) &amp;&amp; !keyboard_check(ord("K")){
    ytartarvel = -LIGHT_MAX_SPEED;
} else if keyboard_check(ord("K")) &amp;&amp; !keyboard_check(ord("I")){
    ytartarvel = LIGHT_MAX_SPEED;
} else {
    ytartarvel = 0;
}

//find target velocities
var vectorlen = sqrt(sqr(xtartarvel) + sqr(ytartarvel));
var xratio = 0; 
var yratio = 0; 
if(vectorlen != 0){
    xratio = xtartarvel / vectorlen;
    yratio = ytartarvel / vectorlen;
    xtarvel = LIGHT_MAX_SPEED * xratio;
    ytarvel = LIGHT_MAX_SPEED * yratio;
} else {
    xtarvel = 0;
    ytarvel = 0;
}
//find accelerations
vectorlen = sqrt(sqr(xtarvel - xvel) + sqr(ytarvel - yvel));

if(vectorlen != 0){
    xratio = (xtarvel - xvel) / vectorlen;
    yratio = (ytarvel - yvel) / vectorlen;
    xace = LIGHT_ACCELERATION * xratio;
    yace = LIGHT_ACCELERATION * yratio;
} else {
    xace = 0;
    yace = 0;
}

//update x velocity
if(xvel != xtarvel &amp;&amp; sign(xvel-xtarvel) == sign((xvel+xace)-xtarvel))
    xvel += xace;
else
    xvel = xtarvel;

    
//update y velocity
if(yvel != ytarvel &amp;&amp; sign(yvel-ytarvel) == sign((yvel+yace)-ytarvel))
    yvel += yace;
else
    yvel = ytarvel;
    
//**Movement**

//update x position
x += xvel;
if(x &lt; Player.x-view_wview[0]/2){
    x = Player.x-view_wview[0]/2;
    xvel = 0;
}else if(x &gt; Player.x+view_wview[0]/2){
    x = Player.x+view_wview[0]/2;
    xvel = 0;
}
//update y position
y += yvel;
if(y &lt; Player.y-view_hview[0]/2){
    y = Player.y-view_hview[0]/2;
    yvel = 0;
}
else if(y &gt; Player.y+view_hview[0]/2){
    y = Player.y+view_hview[0]/2;
    yvel = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
